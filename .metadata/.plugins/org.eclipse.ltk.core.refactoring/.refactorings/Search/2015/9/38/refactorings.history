<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename field &apos;data&apos; in &apos;Node&apos; to &apos;id&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;Node.data&apos;&#x0A;- Renamed element: &apos;Node.id&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;data&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;{Node.java[Node^data" name="id" references="true" setter="false" stamp="1442173091007" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;Node.getData()&apos; to &apos;getId&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;Node.getData()&apos;&#x0A;- Renamed element: &apos;Node.getId()&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getData&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{Node.java[Node~getData" name="getId" references="true" stamp="1442173136328" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;Node.setData(...)&apos; to &apos;setId&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;Node.setData(...)&apos;&#x0A;- Renamed element: &apos;Node.setId(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;setData&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{Node.java[Node~setData~I" name="setId" references="true" stamp="1442173147601" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static int getNumberOfVertices(BufferedReader bIS) throws IOException &apos; from &apos;GenerateNodes.main()&apos; to &apos;GenerateNodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;getNumberOfVertices&apos;&#x0A;- Destination type: &apos;GenerateNodes&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;getNumberOfVertices&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{GenerateNodes.java" name="getNumberOfVertices" replace="false" selection="312 136" stamp="1442174546135" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void createNode(StringTokenizer vertice)&apos; from &apos;GenerateNodes.main()&apos; to &apos;GenerateNodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;createNode&apos;&#x0A;- Destination type: &apos;GenerateNodes&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;createNode&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{GenerateNodes.java" name="createNode" replace="false" selection="482 172" stamp="1442174573580" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Inline method &apos;GenerateNodes.createNode()&apos; in &apos;GenerateNodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;GenerateNodes.createNode()&apos;&#x0A;- Remove method declaration&#x0A;- Replace all references to method with statements" delete="true" description="Inline method &apos;createNode&apos;" flags="786434" id="org.eclipse.jdt.ui.inline.method" input="/src&lt;{GenerateNodes.java" mode="1" selection="626 0" stamp="1442174754411" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static void createNode(ArrayList&lt;Node&gt; nodes, StringTokenizer vertice)&apos; from &apos;GenerateNodes.main()&apos; to &apos;GenerateNodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;createNode&apos;&#x0A;- Destination type: &apos;GenerateNodes&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;createNode&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{GenerateNodes.java" name="createNode" replace="false" selection="559 192" stamp="1442174776213" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename local variable &apos;nodes2&apos; in &apos;GenerateNodes.createNode(...)&apos; to &apos;nodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;GenerateNodes.createNode(HashMap&lt;Integer, Node&gt;, StringTokenizer).nodes2&apos;&#x0A;- Renamed element: &apos;nodes2&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;nodes2&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;{GenerateNodes.java[GenerateNodes~createNode~QHashMap\&lt;QInteger;QNode;&gt;;~QStringTokenizer;@nodes2!692!719!714!719!QHashMap\&lt;QInteger;QNode;&gt;;!0!true" name="nodes" references="true" stamp="1442174987144" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;id&apos; from expression &apos;Integer.parseInt(vertice.nextToken())&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Variable name: &apos;id&apos;&#x0A;- Destination method: &apos;GenerateNodes.createNode()&apos;&#x0A;- Variable expression: &apos;Integer.parseInt(vertice.nextToken())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;id&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{GenerateNodes.java" name="id" replace="true" selection="771 37" stamp="1442175017306" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Inline local variable &apos;GenerateNodes.getNumberOfVertices().number_of_vertices&apos; in &apos;GenerateNodes.getNumberOfVertices()&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;GenerateNodes.getNumberOfVertices().number_of_vertices&apos;" description="Inline local variable &apos;number_of_vertices&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;{GenerateNodes.java" selection="1205 0" stamp="1442175248205" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static int getNumerOfEdges(BufferedReader bIS) throws IOException &apos; from &apos;GenerateNodes.main()&apos; to &apos;GenerateNodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;getNumerOfEdges&apos;&#x0A;- Destination type: &apos;GenerateNodes&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;getNumerOfEdges&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{GenerateNodes.java" name="getNumerOfEdges" replace="false" selection="601 136" stamp="1442175298369" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Inline local variable &apos;GenerateNodes.getNumerOfEdges().number_of_edges&apos; in &apos;GenerateNodes.getNumerOfEdges()&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;GenerateNodes.getNumerOfEdges().number_of_edges&apos;" description="Inline local variable &apos;number_of_edges&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;{GenerateNodes.java" selection="887 0" stamp="1442175309855" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Extract local variable &apos;currentElement&apos; from expression &apos;nodes.get(Integer.parseInt(edge.nextToken()))&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Variable name: &apos;currentElement&apos;&#x0A;- Destination method: &apos;GenerateNodes.main()&apos;&#x0A;- Variable expression: &apos;nodes.get(Integer.parseInt(edge.nextToken()))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;currentElement&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{GenerateNodes.java" name="currentElement" replace="true" selection="773 45" stamp="1442175675498" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Rename field &apos;successors&apos; in &apos;Node&apos; to &apos;adjacents&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;Node.successors&apos;&#x0A;- Renamed element: &apos;Node.adjacents&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;successors&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;{Node.java[Node^successors" name="adjacents" references="true" setter="false" stamp="1442175833098" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;iterator&apos; from expression &apos;nodes.entrySet().iterator()&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Variable name: &apos;iterator&apos;&#x0A;- Destination method: &apos;GenerateNodes.main()&apos;&#x0A;- Variable expression: &apos;nodes.entrySet().iterator()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;iterator&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{GenerateNodes.java" name="iterator" replace="true" selection="991 27" stamp="1442188277050" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static void addEdgesToNodes(StringTokenizer edge)&apos; from &apos;GenerateNodes.main()&apos; to &apos;GenerateNodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;addEdgesToNodes&apos;&#x0A;- Destination type: &apos;GenerateNodes&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;addEdgesToNodes&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{GenerateNodes.java" name="addEdgesToNodes" replace="false" selection="807 223" stamp="1442188990099" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename method &apos;GenerateNodes.addEdgesToNodes(...)&apos; to &apos;addEdgeToNodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;GenerateNodes.addEdgesToNodes(...)&apos;&#x0A;- Renamed element: &apos;GenerateNodes.addEdgeToNodes(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;addEdgesToNodes&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{GenerateNodes.java[GenerateNodes~addEdgesToNodes~QStringTokenizer;" name="addEdgeToNodes" references="true" stamp="1442189002078" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private Node traceBackPath(Node element)&apos; from &apos;BFS.search()&apos; to &apos;BFS&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;traceBackPath&apos;&#x0A;- Destination type: &apos;BFS&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;traceBackPath&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{BFS.java" name="traceBackPath" replace="false" selection="518 148" stamp="1442192951272" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename local variable &apos;stack&apos; in &apos;BFS.traceBackPath(...)&apos; to &apos;tempStack&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;BFS.traceBackPath(Node).stack&apos;&#x0A;- Renamed element: &apos;stack&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;stack&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;{BFS.java[BFS~traceBackPath~QNode;@stack!757!788!769!773!QStack\&lt;QNode;&gt;;!0!false" name="tempStack" references="true" stamp="1442193057887" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private Stack&lt;Node&gt; generateTemporaryStack(Node element)&apos; from &apos;BFS.traceBackPath()&apos; to &apos;BFS&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;generateTemporaryStack&apos;&#x0A;- Destination type: &apos;BFS&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;generateTemporaryStack&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{BFS.java" name="generateTemporaryStack" replace="false" selection="757 158" stamp="1442193096528" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void printElementsInThePath(Stack&lt;Node&gt; tempStack)&apos; from &apos;BFS.traceBackPath()&apos; to &apos;BFS&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;printElementsInThePath&apos;&#x0A;- Destination type: &apos;BFS&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;printElementsInThePath&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{BFS.java" name="printElementsInThePath" replace="false" selection="816 157" stamp="1442193258031" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename method &apos;BFS.traceBackPath(...)&apos; to &apos;PrintResult&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;BFS.traceBackPath(...)&apos;&#x0A;- Renamed element: &apos;BFS.PrintResult(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;traceBackPath&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{BFS.java[BFS~traceBackPath~QNode;~I~I~I" name="PrintResult" references="true" stamp="1442196589597" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;BFS.PrintResult(...)&apos; to &apos;printResult&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;BFS.PrintResult(...)&apos;&#x0A;- Renamed element: &apos;BFS.printResult(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;PrintResult&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{BFS.java[BFS~PrintResult~QNode;~I~I~I" name="printResult" references="true" stamp="1442196594343" version="1.0"/>&#x0A;&#x0A;&#x0A;<refactoring comment="Rename method &apos;BFS.printElementsInThePath(...)&apos; to &apos;printElementsInThePathFromGoalToStart&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;BFS.printElementsInThePath(...)&apos;&#x0A;- Renamed element: &apos;BFS.printElementsInThePathFromGoalToStart(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;printElementsInThePath&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{BFS.java[BFS~printElementsInThePath~QNode;" name="printElementsInThePathFromGoalToStart" references="true" stamp="1442201766152" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;goal&apos; from expression &apos;nodes.get(source_vertex)&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Variable name: &apos;goal&apos;&#x0A;- Destination method: &apos;GenerateNodes.main()&apos;&#x0A;- Variable expression: &apos;nodes.get(source_vertex)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;goal&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{GenerateNodes.java" name="goal" replace="true" selection="938 24" stamp="1442203526526" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static float calculateHeuristicVal(Node goal, Node source)&apos; from &apos;GenerateNodes.main()&apos; to &apos;GenerateNodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;calculateHeuristicVal&apos;&#x0A;- Destination type: &apos;GenerateNodes&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;calculateHeuristicVal&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{GenerateNodes.java" name="calculateHeuristicVal" replace="false" selection="1227 157" stamp="1442203812285" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Inline local variable &apos;GenerateNodes.main().heuristicVal&apos; in &apos;GenerateNodes.main()&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;GenerateNodes.main().heuristicVal&apos;" description="Inline local variable &apos;heuristicVal&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;{GenerateNodes.java" selection="1313 0" stamp="1442203821919" version="1.0"/>&#x0A;<refactoring comment="Inline local variable &apos;GenerateNodes.calculateHeuristicVal().heuristicVal&apos; in &apos;GenerateNodes.calculateHeuristicVal()&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;GenerateNodes.calculateHeuristicVal().heuristicVal&apos;" description="Inline local variable &apos;heuristicVal&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;{GenerateNodes.java" selection="1631 0" stamp="1442203837851" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static void prepareGraph(BufferedReader bIS, int number_of_vertices) throws IOException &apos; from &apos;GenerateNodes.main()&apos; to &apos;GenerateNodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;prepareGraph&apos;&#x0A;- Destination type: &apos;GenerateNodes&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;prepareGraph&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{GenerateNodes.java" name="prepareGraph" replace="false" selection="474 333" stamp="1442208594170" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void doBFSSearch(Node root, int data)&apos; from &apos;GenerateNodes.main()&apos; to &apos;GenerateNodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;doBFSSearch&apos;&#x0A;- Destination type: &apos;GenerateNodes&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;doBFSSearch&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{GenerateNodes.java" name="doBFSSearch" replace="false" selection="946 99" stamp="1442208658449" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void doDFSSearch(Node root, int data)&apos; from &apos;GenerateNodes.main()&apos; to &apos;GenerateNodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;doDFSSearch&apos;&#x0A;- Destination type: &apos;GenerateNodes&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;doDFSSearch&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{GenerateNodes.java" name="doDFSSearch" replace="false" selection="977 46" stamp="1442208669391" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void doGreedyBFSSearch(Node root, int data)&apos; from &apos;GenerateNodes.main()&apos; to &apos;GenerateNodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;doGreedyBFSSearch&apos;&#x0A;- Destination type: &apos;GenerateNodes&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;doGreedyBFSSearch&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{GenerateNodes.java" name="doGreedyBFSSearch" replace="false" selection="1191 122" stamp="1442208684367" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void computeHeuristicVal(int number_of_vertices, Node goal)&apos; from &apos;GenerateNodes.main()&apos; to &apos;GenerateNodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;computeHeuristicVal&apos;&#x0A;- Destination type: &apos;GenerateNodes&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;computeHeuristicVal&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{GenerateNodes.java" name="computeHeuristicVal" replace="false" selection="1050 137" stamp="1442208717822" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Inline method &apos;GenerateNodes.prepareGraph()&apos; in &apos;GenerateNodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;GenerateNodes.prepareGraph()&apos;&#x0A;- Remove method declaration" delete="true" description="Inline method &apos;prepareGraph&apos;" flags="786434" id="org.eclipse.jdt.ui.inline.method" input="/src&lt;{GenerateNodes.java" mode="0" selection="482 0" stamp="1442208768648" version="1.0"/>&#x0A;&#x0A;&#x0A;<refactoring comment="Extract method &apos;private static void prepareGraphFromFileInput() throws FileNotFoundException, IOException &apos; from &apos;GenerateNodes.main()&apos; to &apos;GenerateNodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;prepareGraphFromFileInput&apos;&#x0A;- Destination type: &apos;GenerateNodes&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;prepareGraphFromFileInput&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{GenerateNodes.java" name="prepareGraphFromFileInput" replace="false" selection="346 463" stamp="1442208923597" version="1.0" visibility="2"/>&#x0A;&#x0A;&#x0A;<refactoring comment="Inline method &apos;BFS.addChildren()&apos; in &apos;BFS&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;BFS.addChildren()&apos;&#x0A;- Remove method declaration" delete="true" description="Inline method &apos;addChildren&apos;" flags="786434" id="org.eclipse.jdt.ui.inline.method" input="/src&lt;{BFS.java" mode="0" selection="723 0" stamp="1442431278351" version="1.0"/>&#x0A;<refactoring comment="Inline method &apos;DFS.addChildern()&apos; in &apos;DFS&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;DFS.addChildern()&apos;&#x0A;- Remove method declaration" delete="true" description="Inline method &apos;addChildern&apos;" flags="786434" id="org.eclipse.jdt.ui.inline.method" input="/src&lt;{DFS.java" mode="0" selection="662 0" stamp="1442432769123" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private void addChildern(Set&lt;Node&gt; explored, Node element)&apos; from &apos;BFS.search()&apos; to &apos;BFS&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;addChildern&apos;&#x0A;- Destination type: &apos;BFS&apos;&#x0A;- Declared visibility: &apos;private&apos;&#x0A;- Replace occurrences of statements with method" comments="false" description="Extract method &apos;addChildern&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{BFS.java" name="addChildern" replace="true" selection="714 264" stamp="1442433788399" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename method &apos;BFS.addChildern(...)&apos; to &apos;addChilderns&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;BFS.addChildern(...)&apos;&#x0A;- Renamed element: &apos;BFS.addChilderns(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;addChildern&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{BFS.java[BFS~addChildern~QSet\&lt;QNode;&gt;;~QNode;" name="addChilderns" references="true" stamp="1442433795502" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;GreedyBFS.addChildren(...)&apos; to &apos;addChildrens&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;GreedyBFS.addChildren(...)&apos;&#x0A;- Renamed element: &apos;GreedyBFS.addChildrens(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;addChildren&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{GreedyBFS.java[GreedyBFS~addChildren~QNode;~QSet\&lt;QNode;&gt;;" name="addChildrens" references="true" stamp="1442433810056" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private void addChildren(Set&lt;Node&gt; explored, Node element)&apos; from &apos;DFS.search()&apos; to &apos;DFS&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;addChildren&apos;&#x0A;- Destination type: &apos;DFS&apos;&#x0A;- Declared visibility: &apos;private&apos;&#x0A;- Replace occurrences of statements with method" comments="false" description="Extract method &apos;addChildren&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{DFS.java" name="addChildren" replace="true" selection="652 265" stamp="1442433875534" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename method &apos;DFS.addChildren(...)&apos; to &apos;addChildrens&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;DFS.addChildren(...)&apos;&#x0A;- Renamed element: &apos;DFS.addChildrens(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;addChildren&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{DFS.java[DFS~addChildren~QSet\&lt;QNode;&gt;;~QNode;" name="addChildrens" references="true" stamp="1442433881817" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;DFS.printElementsInThePathFromGoalToStart(...)&apos; to &apos;traceBack&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;DFS.printElementsInThePathFromGoalToStart(...)&apos;&#x0A;- Renamed element: &apos;DFS.traceBack(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;printElementsInThePathFromGoalToStart&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{DFS.java[DFS~printElementsInThePathFromGoalToStart~QNode;" name="traceBack" references="true" stamp="1442434130251" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;BFS.printElementsInThePathFromGoalToStart(...)&apos; to &apos;traceBack&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;BFS.printElementsInThePathFromGoalToStart(...)&apos;&#x0A;- Renamed element: &apos;BFS.traceBack(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;printElementsInThePathFromGoalToStart&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{BFS.java[BFS~printElementsInThePathFromGoalToStart~QNode;" name="traceBack" references="true" stamp="1442434146874" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;GreedyBFS.printElementsInThePathFromGoalToStart(...)&apos; to &apos;traceBack&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;GreedyBFS.printElementsInThePathFromGoalToStart(...)&apos;&#x0A;- Renamed element: &apos;GreedyBFS.traceBack(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;printElementsInThePathFromGoalToStart&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{GreedyBFS.java[GreedyBFS~printElementsInThePathFromGoalToStart~QNode;" name="traceBack" references="true" stamp="1442434161929" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;BFS.traceBack(...)&apos; to &apos;printPathFromStartToGoal&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;BFS.traceBack(...)&apos;&#x0A;- Renamed element: &apos;BFS.printPathFromStartToGoal(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;traceBack&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{BFS.java[BFS~traceBack~QNode;" name="printPathFromStartToGoal" references="true" stamp="1442434845913" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private ArrayList&lt;Node&gt; traceBack(Node element)&apos; from &apos;BFS.printPathFromStartToGoal()&apos; to &apos;BFS&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;traceBack&apos;&#x0A;- Destination type: &apos;BFS&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;traceBack&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{BFS.java" name="traceBack" replace="false" selection="1780 127" stamp="1442434852304" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static int getVertex(int source_vertex_xCor, int source_vertex_yCor)&apos; from &apos;GenerateNodes.main()&apos; to &apos;GenerateNodes&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Method name: &apos;getVertex&apos;&#x0A;- Destination type: &apos;GenerateNodes&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;getVertex&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{GenerateNodes.java" name="getVertex" replace="false" selection="959 200" stamp="1442537892512" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename local variable &apos;source_vertex_xCor&apos; in &apos;GenerateNodes.getVertex(...)&apos; to &apos;xCor&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;GenerateNodes.getVertex(int, int).source_vertex_xCor&apos;&#x0A;- Renamed element: &apos;source_vertex_xCor&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;source_vertex_xCor&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;{GenerateNodes.java[GenerateNodes~getVertex~I~I@source_vertex_xCor!2021!2042!2025!2042!I!0!true" name="xCor" references="true" stamp="1442538105678" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;source_vertex_yCor&apos; in &apos;GenerateNodes.getVertex(...)&apos; to &apos;yCor&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Original element: &apos;GenerateNodes.getVertex(int, int).source_vertex_yCor&apos;&#x0A;- Renamed element: &apos;source_vertex_yCor&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;source_vertex_yCor&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;{GenerateNodes.java[GenerateNodes~getVertex~I~I@source_vertex_yCor!2031!2052!2035!2052!I!0!true" name="yCor" references="true" stamp="1442538111260" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;node&apos; from expression &apos;nodes.get(i)&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Variable name: &apos;node&apos;&#x0A;- Destination method: &apos;GenerateNodes.getVertex()&apos;&#x0A;- Variable expression: &apos;nodes.get(i)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;node&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{GenerateNodes.java" name="node" replace="true" selection="2087 12" stamp="1442538118282" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;vertex&apos; from expression &apos;getVertex(source_vertex_xCor,source_vertex_yCor)&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Variable name: &apos;vertex&apos;&#x0A;- Destination method: &apos;GenerateNodes.main()&apos;&#x0A;- Variable expression: &apos;getVertex(source_vertex_xCor,source_vertex_yCor)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;vertex&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{GenerateNodes.java" name="vertex" replace="true" selection="987 49" stamp="1442538254693" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;vertexGoal&apos; from expression &apos;getVertex(goal_vertex_xCor,goal_vertex_yCor)&apos;&#x0A;- Original project: &apos;Search&apos;&#x0A;- Variable name: &apos;vertexGoal&apos;&#x0A;- Destination method: &apos;GenerateNodes.main()&apos;&#x0A;- Variable expression: &apos;getVertex(goal_vertex_xCor,goal_vertex_yCor)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;vertexGoal&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{GenerateNodes.java" name="vertexGoal" replace="true" selection="1469 45" stamp="1442538382899" version="1.0"/>
</session>